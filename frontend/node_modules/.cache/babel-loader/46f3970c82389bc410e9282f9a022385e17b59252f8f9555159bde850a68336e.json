{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericr\\\\Documents\\\\CPEN291\\\\Project2\\\\frontend\\\\src\\\\WebcamCapture.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Webcam from 'react-webcam';\nimport './Title.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = _ref => {\n  _s();\n  let {\n    onResponse\n  } = _ref;\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    // Create a FormData object and append the captured image to it\n    const formData = new FormData();\n    formData.append('image', imageSrc);\n\n    // Send a POST request to the server to upload the image\n    fetch('http://172.28.90.45:8080/upload', {\n      method: 'POST',\n      body: formData\n    })\n    // wait for a response from the backend server\n    .then(response => response.json())\n    // process the received data with following function\n    .then(data => {\n      console.log(data);\n      onResponse(data);\n    })\n    // catch any error\n    .catch(error => console.error(error));\n    window.alert('Photo has been sent!');\n  }, [webcamRef, setImgSrc, onResponse]);\n  return (\n    /*#__PURE__*/\n    // create block with relative position\n    _jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        onUserMediaError: () => {\n          console.log('failed to access user media');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capture,\n        className: \"pixel2\",\n        style: {\n          position: 'absolute',\n          top: '10px',\n          left: '10px'\n        },\n        children: \"Take photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(WebcamCapture, \"ESwUrLq+HE9liXlylGlqUDf3hvQ=\");\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","Webcam","jsxDEV","_jsxDEV","WebcamCapture","_ref","_s","onResponse","webcamRef","useRef","imgSrc","setImgSrc","useState","capture","useCallback","imageSrc","current","getScreenshot","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","catch","error","window","alert","style","position","children","audio","ref","screenshotFormat","onUserMediaError","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","top","left","_c","$RefreshReg$"],"sources":["C:/Users/ericr/Documents/CPEN291/Project2/frontend/src/WebcamCapture.js"],"sourcesContent":["import React from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport './Title.css';\r\n\r\nconst WebcamCapture = ({onResponse}) => {\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(null);\r\n  const capture = React.useCallback(() => {\r\n    \r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    // Create a FormData object and append the captured image to it\r\n    const formData = new FormData();\r\n    formData.append('image', imageSrc);\r\n    \r\n    // Send a POST request to the server to upload the image\r\n    fetch('http://172.28.90.45:8080/upload', { \r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      // wait for a response from the backend server\r\n      .then((response) => response.json())\r\n      // process the received data with following function\r\n      .then((data) => {\r\n        console.log(data);\r\n        onResponse(data);\r\n      })\r\n      // catch any error\r\n      .catch((error) => console.error(error));\r\n      window.alert('Photo has been sent!');\r\n  }, [webcamRef, setImgSrc, onResponse]);\r\n  \r\n  return (\r\n    // create block with relative position\r\n    <div style={{position: 'relative'}}>\r\n      {/* set the Webcam settings */}\r\n      <Webcam\r\n        audio={false}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        onUserMediaError={() => {\r\n          console.log('failed to access user media');\r\n        }}\r\n        />\r\n      {/* create a button to perform capture photo with the webcam */}\r\n      <button onClick={capture} className=\"pixel2\"\r\n      style={{position: 'absolute', top: '10px', left: '10px'}}>\r\n        Take photo</button>\r\n        <div className='image'>\r\n          {/* {imgSrc && (  \r\n        <img\r\n          src={imgSrc}\r\n        />\r\n      )} */}\r\n        </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default WebcamCapture;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAACC;EAAU,CAAC,GAAAF,IAAA;EACjC,MAAMG,SAAS,GAAGR,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMC,OAAO,GAAGb,KAAK,CAACc,WAAW,CAAC,MAAM;IAEtC,MAAMC,QAAQ,GAAGP,SAAS,CAACQ,OAAO,CAACC,aAAa,EAAE;IAClDN,SAAS,CAACI,QAAQ,CAAC;IACnB;IACA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,QAAQ,CAAC;;IAElC;IACAM,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC;IACC;IAAA,CACCM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE;IACnC;IAAA,CACCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBpB,UAAU,CAACoB,IAAI,CAAC;IAClB,CAAC;IACD;IAAA,CACCG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;IACvCC,MAAM,CAACC,KAAK,CAAC,sBAAsB,CAAC;EACxC,CAAC,EAAE,CAACzB,SAAS,EAAEG,SAAS,EAAEJ,UAAU,CAAC,CAAC;EAEtC;IAAA;IACE;IACAJ,OAAA;MAAK+B,KAAK,EAAE;QAACC,QAAQ,EAAE;MAAU,CAAE;MAAAC,QAAA,gBAEjCjC,OAAA,CAACF,MAAM;QACLoC,KAAK,EAAE,KAAM;QACbC,GAAG,EAAE9B,SAAU;QACf+B,gBAAgB,EAAC,YAAY;QAC7BC,gBAAgB,EAAEA,CAAA,KAAM;UACtBZ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC5C;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eAEJzC,OAAA;QAAQ0C,OAAO,EAAEhC,OAAQ;QAACiC,SAAS,EAAC,QAAQ;QAC5CZ,KAAK,EAAE;UAACC,QAAQ,EAAE,UAAU;UAAEY,GAAG,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAM,CAAE;QAAAZ,QAAA,EAAC;MAC9C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACnBzC,OAAA;QAAK2C,SAAS,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMhB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEJ;AAEV,CAAC;AAACtC,EAAA,CAtDIF,aAAa;AAAA6C,EAAA,GAAb7C,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}