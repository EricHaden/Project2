{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericr\\\\Documents\\\\CPEN291\\\\Project2\\\\frontend\\\\src\\\\Popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport Modal from 'react-modal';\nimport './Title.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // to control the open of the pop up window through outside request\n  useImperativeHandle(ref, () => ({\n    setModalIsOpen(value) {\n      setModalIsOpen(value);\n    }\n  }));\n\n  // function to close the pop up window\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  // style class of the pop window\n  const popupWindow = {\n    content: {\n      width: '50%',\n      height: '50%',\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      borderRadius: '25px',\n      overflow: 'hidden',\n      background: 'white'\n    }\n  };\n\n  // css class of the text block in the pop up window\n  const text = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%'\n  };\n  return (\n    /*#__PURE__*/\n    // a pop up window block,\n    // it is open when modalIsopen is true and close when closeModal is requested\n    // css style use popupWindow css class\n    _jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: popupWindow,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), props.response && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: text,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '5vw',\n            fontWeight: 'bold'\n          },\n          children: props.response.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  );\n}, \"XjGBJEhd99ac/F2yUv0Vf0t4Mhg=\")), \"XjGBJEhd99ac/F2yUv0Vf0t4Mhg=\");\n_c2 = Popup;\nexport default Popup;\nvar _c, _c2;\n$RefreshReg$(_c, \"Popup$forwardRef\");\n$RefreshReg$(_c2, \"Popup\");","map":{"version":3,"names":["React","useState","forwardRef","useImperativeHandle","Modal","jsxDEV","_jsxDEV","Popup","_s","_c","props","ref","modalIsOpen","setModalIsOpen","value","closeModal","popupWindow","content","width","height","top","left","right","bottom","marginRight","transform","borderRadius","overflow","background","text","display","justifyContent","alignItems","isOpen","onRequestClose","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","response","fontSize","fontWeight","result","_c2","$RefreshReg$"],"sources":["C:/Users/ericr/Documents/CPEN291/Project2/frontend/src/Popup.js"],"sourcesContent":["import React, {useState, forwardRef, useImperativeHandle} from 'react';\r\nimport Modal from 'react-modal';\r\nimport './Title.css';\r\n\r\nconst Popup = forwardRef((props, ref) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    // to control the open of the pop up window through outside request\r\n    useImperativeHandle(ref, () => ({\r\n        setModalIsOpen(value) {\r\n            setModalIsOpen(value);\r\n        }\r\n    }));\r\n\r\n    // function to close the pop up window\r\n    function closeModal() {\r\n        setModalIsOpen(false);\r\n    }\r\n\r\n    // style class of the pop window\r\n    const popupWindow = {\r\n        content : {\r\n            width: '50%',\r\n            height: '50%',\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            borderRadius: '25px',\r\n            overflow: 'hidden',\r\n            background: 'white',\r\n        }\r\n    };\r\n\r\n    // css class of the text block in the pop up window\r\n    const text = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%'\r\n      };\r\n\r\n    return (\r\n        // a pop up window block,\r\n        // it is open when modalIsopen is true and close when closeModal is requested\r\n        // css style use popupWindow css class\r\n        <Modal isOpen={modalIsOpen} onRequestClose={closeModal} style={popupWindow}>\r\n            <button onClick={closeModal}>X</button>\r\n            {/* show the response from the backend if existed */}\r\n            {props.response && (\r\n                <div style={text}>\r\n                    {/* in line css: set fontSize and bold */}\r\n                    <p style={{fontSize: '5vw', fontWeight: 'bold'}}>{props.response.result}</p>\r\n                </div>\r\n            )}\r\n        </Modal>\r\n    )\r\n})\r\n\r\nexport default Popup"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,QAAO,OAAO;AACtE,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,gBAAAC,EAAA,eAAGN,UAAU,CAAAO,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,GAAG,KAAK;EAAAH,EAAA;EACrC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAE,mBAAmB,CAACQ,GAAG,EAAE,OAAO;IAC5BE,cAAcA,CAACC,KAAK,EAAE;MAClBD,cAAc,CAACC,KAAK,CAAC;IACzB;EACJ,CAAC,CAAC,CAAC;;EAEH;EACA,SAASC,UAAUA,CAAA,EAAG;IAClBF,cAAc,CAAC,KAAK,CAAC;EACzB;;EAEA;EACA,MAAMG,WAAW,GAAG;IAChBC,OAAO,EAAG;MACNC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,MAAM;MACnBC,SAAS,EAAE,uBAAuB;MAClCC,YAAY,EAAE,MAAM;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE;IAChB;EACJ,CAAC;;EAED;EACA,MAAMC,IAAI,GAAG;IACTC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBb,MAAM,EAAE;EACV,CAAC;EAEH;IAAA;IACI;IACA;IACA;IACAb,OAAA,CAACF,KAAK;MAAC6B,MAAM,EAAErB,WAAY;MAACsB,cAAc,EAAEnB,UAAW;MAACoB,KAAK,EAAEnB,WAAY;MAAAoB,QAAA,gBACvE9B,OAAA;QAAQ+B,OAAO,EAAEtB,UAAW;QAAAqB,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAEtC/B,KAAK,CAACgC,QAAQ,iBACXpC,OAAA;QAAK6B,KAAK,EAAEN,IAAK;QAAAO,QAAA,eAEb9B,OAAA;UAAG6B,KAAK,EAAE;YAACQ,QAAQ,EAAE,KAAK;YAAEC,UAAU,EAAE;UAAM,CAAE;UAAAR,QAAA,EAAE1B,KAAK,CAACgC,QAAQ,CAACG;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEnF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACG;AAEhB,CAAC,kCAAC;AAAAK,GAAA,GAvDIvC,KAAK;AAyDX,eAAeA,KAAK;AAAA,IAAAE,EAAA,EAAAqC,GAAA;AAAAC,YAAA,CAAAtC,EAAA;AAAAsC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}