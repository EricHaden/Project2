{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericr\\\\Documents\\\\CPEN291\\\\Project2\\\\frontend\\\\src\\\\WebcamCapture.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Webcam from 'react-webcam';\nimport './Title.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = () => {\n  _s();\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    // Create a FormData object and append the captured image to it\n    const formData = new FormData();\n    formData.append('image', imageSrc);\n    const mode = \"god\";\n    formData.append('mode', mode);\n\n    // Send a POST request to the server to upload the image\n    fetch('http://:8000/upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n  }, [webcamRef, setImgSrc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      className: \"Header-button\",\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px'\n      },\n      children: \"Capture photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(WebcamCapture, \"ESwUrLq+HE9liXlylGlqUDf3hvQ=\");\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","Webcam","jsxDEV","_jsxDEV","WebcamCapture","_s","webcamRef","useRef","imgSrc","setImgSrc","useState","capture","useCallback","imageSrc","current","getScreenshot","formData","FormData","append","mode","fetch","method","body","then","response","json","data","console","log","catch","error","style","position","children","audio","ref","screenshotFormat","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","top","left","src","_c","$RefreshReg$"],"sources":["C:/Users/ericr/Documents/CPEN291/Project2/frontend/src/WebcamCapture.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport './Title.css';\r\n\r\nconst WebcamCapture = () => {\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(null);\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    // Create a FormData object and append the captured image to it\r\n    const formData = new FormData();\r\n    formData.append('image', imageSrc);\r\n    const mode = \"god\";\r\n    formData.append('mode', mode);\r\n    \r\n    // Send a POST request to the server to upload the image\r\n    fetch('http://:8000/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => console.log(data))\r\n      .catch((error) => console.error(error));\r\n  }, [webcamRef, setImgSrc]);\r\n  \r\n  return (\r\n    <div style={{position: 'relative'}}>\r\n      <Webcam\r\n        audio={false}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        />\r\n      <button onClick={capture} className=\"Header-button\"\r\n      style={{position: 'absolute', top: '10px', left: '10px'}}>\r\n        Capture photo</button>\r\n      {imgSrc && (\r\n        <img\r\n          src={imgSrc}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default WebcamCapture;\r\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGN,KAAK,CAACO,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMC,OAAO,GAAGX,KAAK,CAACY,WAAW,CAAC,MAAM;IACtC,MAAMC,QAAQ,GAAGP,SAAS,CAACQ,OAAO,CAACC,aAAa,EAAE;IAClDN,SAAS,CAACI,QAAQ,CAAC;IACnB;IACA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,QAAQ,CAAC;IAClC,MAAMM,IAAI,GAAG,KAAK;IAClBH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEC,IAAI,CAAC;;IAE7B;IACAC,KAAK,CAAC,qBAAqB,EAAE;MAC3BC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CACjCG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACxB,SAAS,EAAEG,SAAS,CAAC,CAAC;EAE1B,oBACEN,OAAA;IAAK4B,KAAK,EAAE;MAACC,QAAQ,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACjC9B,OAAA,CAACF,MAAM;MACLiC,KAAK,EAAE,KAAM;MACbC,GAAG,EAAE7B,SAAU;MACf8B,gBAAgB,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eACJrC,OAAA;MAAQsC,OAAO,EAAE9B,OAAQ;MAAC+B,SAAS,EAAC,eAAe;MACnDX,KAAK,EAAE;QAACC,QAAQ,EAAE,UAAU;QAAEW,GAAG,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAM,CAAE;MAAAX,QAAA,EAAC;IAC3C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACvBhC,MAAM,iBACLL,OAAA;MACE0C,GAAG,EAAErC;IAAO;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACnC,EAAA,CAvCID,aAAa;AAAA0C,EAAA,GAAb1C,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}